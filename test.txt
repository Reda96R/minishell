============================fixed=========================================

- cmd > file | cmd ------> infinite loop [solved]
- << eof cmd ------> syntax error [solved]
- cmd > file0 > fil1 -----> only the last file is stored [solved]
- < file -----> bug with syntax error [solved] 
- echo "test" ------> quotes should be deleted [solved]
- expanding in null -----> $test cmd [solved]
- echo "ls       l" [solved]
- $"test ls" [solved]
- "ls -la" ----> quote should be considered one comand (cmd[0]) [solved]
- | > not a syntax error [solved]
- echo $USER.hello
- echo $$$$$$
- echo asdasd.$.USER
- echo "$""USER"
- echo $USER.USER
- echo ''$"USER"
- echo ""''""''""''""''""''""'''$USER'
- echo "'""'"'""'
- echo $USER"hello"''
- echo "'$USER'""hello"
- echo "|" ----------> check for quotes not only in the start
- echo '"ls"' ----> should display "ls"
- echo '"$ls"' ----> should display "$ls"
- "$PWD" ------> should be expanded
- echo "'$VAR'" ----> it should expand the var = 'VAR' 
- true_cmd | false_cmd -----> program exits
- ls|ls
- error with herdoc -----> segfault when delemiter is not given
- echo -n l
- exit 1 a ----> should display too many args
- ctrl + \ ------> should stop cat
- echo "test" > file0
- cmd -flag1 -flag2  (only the first flag works) ---> both should work
- ls | ls < dgh
- exit -9223372036854775807

=========================not fixed yet===================================
- $$VAR ----> should display command not found -----> (send empty string unsted of a NULL)
- segfault when ---> echo $? many times 
- wrong exit status
- cat <"./test_files/file name with spaces"
- wc - ---------> program crashes
- wc - ---------> program crashes
- "" ---> should send '\0' and not null
- ls > $FAKE_VAR ----> ambiguous redirect
- ls > $HOME
- "" it should send an empty string instead of null
- env | grep "=" --------> rm quotes
- export c = "x" -----> should display export: `=': not a valid identifier
- cd ?
- bash -> exit +1 -> echo $? ----------> should display 1
- echo ''"'$HOME'"'' ------------------> check expand single quotes
- handle _ in parsing, $USER_ ----> should not expanded
if next to _ is alphanum it is considered from the name of VAR
else just print the following or expand
- if herdoc expand is on quotes rules are ignored

